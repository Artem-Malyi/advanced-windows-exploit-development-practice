.386
.model flat, stdcall

loadLibraryA proto loadLibraryA@0

.code
    stringHash proc C, string: dword
        mov     esi, string         ; 0EC0E4E8Eh
        xor     edi, edi            ; Zero edi as it will hold the hash value for the current symbols function name.
        xor     eax, eax            ; Zero eax in order to ensure that the high order bytes are zero as this will
        cld         
      computeHash:
        lodsb                       ; Load the byte at esi, the current symbol name, into al and increment esi.
        test    al, al              ; Bitwise test al with itself to see if the end of the string has been reached.
        jz      hashFinished        ; If ZF is set the end of the string has been reached. Jump to the end of the hash calculation.
        ror     edi, 0dh            ; Rotate the current value of the hash 13 bits to the right.
        add     edi, eax            ; Add the current character of the symbol name to the hash accumulator.
        jmp     computeHash         ; Continue looping through the symbol name.        
      hashFinished: 
        mov     eax, edi
        ret
    stringHash endp
end